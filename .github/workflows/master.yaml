name: Deploy API

on:
  push:
    branches:
    - master

jobs:
  build-release:
    runs-on: ubuntu-latest

    steps:

    - name: Checkout
      uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.16

    - name: Pull secrets
      run: |
        echo '${{ secrets.GCP_SA_KEY }}' > config/auth.json
        echo '${{ secrets.GCP_SSH_KEY }}' > config/config.json

    - name: Test
      run: |
        go get -v ./...

    - name: Build
      run: |
        go get ./...
        go get -u layeh.com/gopus
        go build -o discord_server cmd/discord-bot/main.go

    # Need to reimplement after unit test are seperated from integration tests
    # - name: Test
    #   run: go test -v ./...

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@master
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        export_default_credentials: true
      
    - name: Use gcloud CLI
      run: gcloud info

    - name: Upload new server binary
      run: |
        gcloud compute ssh --strict-host-key-checking=no --zone=us-central1-c colerwyats@hopper-instance-1 --command="mkdir ${GITHUB_SHA}"
        gcloud compute scp --strict-host-key-checking=no --zone=us-central1-c ./discord_server colerwyats@hopper-instance-1:/home/colerwyats/${GITHUB_SHA}

    - name: Upload new configs from secret
      run: |
        echo '${{ secrets.GCP_SA_KEY }}' > config/auth.json
        echo '${{ secrets.GCP_SSH_KEY }}' > config/config.json

        gcloud compute ssh --strict-host-key-checking=no --zone=us-central1-c colerwyats@hopper-instance-1 --command="mkdir ${GITHUB_SHA}/config"

        gcloud compute scp --strict-host-key-checking=no --zone=us-central1-c config/auth.json colerwyats@hopper-instance-1:/home/colerwyats/${GITHUB_SHA}/config
        gcloud compute scp --strict-host-key-checking=no --zone=us-central1-c config/config.json colerwyats@hopper-instance-1:/home/colerwyats/${GITHUB_SHA}/config
        gcloud compute scp --strict-host-key-checking=no --zone=us-central1-c config/command.json colerwyats@hopper-instance-1:/home/colerwyats/${GITHUB_SHA}/config
        gcloud compute scp --strict-host-key-checking=no --zone=us-central1-c config/bot.service colerwyats@hopper-instance-1:/home/colerwyats/${GITHUB_SHA}/config
        gcloud compute scp --strict-host-key-checking=no --zone=us-central1-c config/loadingMessages.txt colerwyats@hopper-instance-1:/home/colerwyats/${GITHUB_SHA}/config

    - name: Stop old service and start new
      run: |

        gcloud compute ssh --strict-host-key-checking=no --zone=us-central1-c colerwyats@hopper-instance-1 --command="unlink current; ln -s ${GITHUB_SHA} current"
        gcloud compute ssh --strict-host-key-checking=no --zone=us-central1-c colerwyats@hopper-instance-1 --command="sudo systemctl restart bot.service"

# This line needs to be ran is service never created before
# gcloud compute ssh --strict-host-key-checking=no --zone=us-central1-c colerwyats@hopper-instance-1 --command="cd ${GITHUB_SHA}/config; sudo mv bot.service /etc/systemd/system; cd /etc/systemd/system; sudo systemctl daemon-reload; sudo systemctl enable bot.service; sudo systemctl start bot.service"